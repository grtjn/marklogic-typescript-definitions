<apidoc:module name="TemporalModule" category="Temporal" 
	lib="temporal" 
	xmlns:apidoc="http://marklogic.com/xdmp/apidoc" 
	xmlns="http://www.w3.org/1999/xhtml">
  <apidoc:summary>
    <p>
    This module contains the functions used to insert, delete and manage temporal documents.
    </p>
     To understand the temporal functions, you need to understand the meaning of the following terms:
    <p>   
    <ul>
      <li>Instant: an instant of time, such as "now", "12/31/2012, 01:00:00 am".</li>
      <li>Period: an anchored duration of time (e.g. December 01, 1999 through December 31, 2000, the fall semester)</li>
      <li>Axis: a named pair of range indexes that is the container for periods.</li>
      <li>Valid time: when a fact was true in modeled reality.</li>
      <li>System time: when a fact was stored in the database.</li>
      <li>User-defined time: a time value that user provides in replacement of system start time.      </li>
      <li>LSQT (Last Stable Query Time): a document with a system start time before this point 
      can be queried and a document with a system start time after this point can be updated 
      and ingested. 
      </li>
    </ul>  
    </p>
    <p>The Tiered Storage function module is installed as the following file:</p>
    <ul>
	  <li><code><em>install_dir</em>/Modules/MarkLogic/temporal.xqy</code></li>
    </ul>
    <p>where <code><em>install_dir</em></code> is the directory in which 
	    MarkLogic Server is installed.</p>
    <p>To use the <code>temporal.xqy</code> module in your own XQuery modules, 
     include the following line in your XQuery prolog:</p>
    <pre xml:space="preserve">
import module namespace temporal="http://marklogic.com/xdmp/temporal" 
          at "/MarkLogic/temporal.xqy";</pre>
  </apidoc:summary>

<apidoc:function name="axis-create" lib="temporal" category="Temporal">
  <apidoc:summary>
  This function constructs an axis definition based on the existing range indexes that can be 
  added to a temporal collection in subsequent API calls. The axis definition is stored in the schema
  database.
  <p>
  For details on how to create an axis, see  
 <a href='#display.xqy?fname=http://pubs/6.0doc/xml/temporal/temporal-quick-start.xml%2375804'>Create System and Valid Axes</a> in the <em>Temporal Developer's Guide</em>
  </p><p>   
  A TEMPORAL-NONDATETIME exception is thrown if range index scalar type is not dateTime.
  A TEMPORAL-DUPAXIS exception is thrown if the axis already exists.
  </p>
  </apidoc:summary>
  <apidoc:params>
    <apidoc:param name="axis-name" type="xs:string">
    The name to be used to identify the axis. 
    </apidoc:param>
    <apidoc:param name="start-range-index" type="cts:reference">
    A reference to a range index to be used as the start of the time period.
    </apidoc:param>
    <apidoc:param name="end-range-index" type="cts:reference">
    A reference to a range index to be used as the end of the time period.
    </apidoc:param>
  </apidoc:params>
  <apidoc:return>xs:unsignedLong</apidoc:return>
<apidoc:example class="xquery"><pre xml:space="preserve"><![CDATA[
xquery version "1.0-ml"; 
 
import module namespace temporal = "http://marklogic.com/xdmp/temporal" 
      at "/MarkLogic/temporal.xqy";

temporal:axis-remove("system"),
temporal:axis-remove("valid"),
temporal:axis-create(
   "system",
   cts:element-reference(xs:QName("systemStart")),
   cts:element-reference(xs:QName("systemEnd"))),
temporal:axis-create(
   "valid",
   cts:element-reference(xs:QName("validStart")),
   cts:element-reference(xs:QName("validEnd")))

   (: 
      First removes, then creates two axes, named "system" and "valid",
      from the element range indexes, "systemStart", "systemEnd",
      "validStart", and "validEnd".  Then it returns the IDs of the
      new axes.
  :)     
]]></pre></apidoc:example>

<apidoc:example class="javascript"><pre xml:space="preserve"><![CDATA[
var temporal = require("/MarkLogic/temporal.xqy");

temporal.axisRemove("system");
temporal.axisRemove("valid");
var output = new Array();
output.push(
  temporal.axisCreate(
   "system",
   cts.elementReference(xs.QName("systemStart")),
   cts.elementReference(xs.QName("systemEnd"))) 
  );

output.push(
  temporal.axisCreate(
   "valid",
   cts.elementReference(xs.QName("validStart")),
   cts.elementReference(xs.QName("validEnd"))) 
  );
output;

// First removes, then creates two axes, named "system" and "valid",
// from the element range indexes, "systemStart", "systemEnd",
// "validStart", and "validEnd".  Then it returns the IDs of the
// new axes.
]]></pre></apidoc:example>

</apidoc:function>

<apidoc:function name="axis-remove" lib="temporal" category="Temporal">
  <apidoc:summary>
  This function removes an axis definition from the schema database.
  <p>
	  A TEMPORAL-AXISINUSE exception is thrown if the named axis is 
	  referred to by a collection.
  </p>
  </apidoc:summary>
  <apidoc:params>
    <apidoc:param name="axis-name" type="xs:string">
    The name of the axis to be deleted.
    </apidoc:param>
  </apidoc:params>
  <apidoc:return>empty-sequence()</apidoc:return>
<apidoc:example class="xquery"><pre xml:space="preserve"><![CDATA[
xquery version "1.0-ml"; 
 
import module namespace temporal = "http://marklogic.com/xdmp/temporal" 
      at "/MarkLogic/temporal.xqy";

temporal:axis-remove("system")

(: Removes the "system" axis from the database. :)
]]></pre></apidoc:example>

<apidoc:example class="javascript"><pre xml:space="preserve"><![CDATA[
var temporal = require("/MarkLogic/temporal.xqy");

temporal.axisRemove("system");

// Removes the "system" axis from the database. 
]]></pre></apidoc:example>

</apidoc:function>

<apidoc:function name="axes" lib="temporal" category="Temporal">
  <apidoc:summary>
  This function returns all the axis names defined in the schema databases.
  </apidoc:summary>
  <apidoc:return>xs:string*</apidoc:return>
<apidoc:example class="xquery"><pre xml:space="preserve"><![CDATA[
xquery version "1.0-ml"; 
 
import module namespace temporal = "http://marklogic.com/xdmp/temporal" 
      at "/MarkLogic/temporal.xqy";

temporal:axes() 

(: Returns the names of all of the axes in the database. :)
]]></pre></apidoc:example>

<apidoc:example class="javascript"><pre xml:space="preserve"><![CDATA[
var temporal = require("/MarkLogic/temporal.xqy");

temporal.axes() 

// Returns the names of all of the axes in the database. 
]]></pre></apidoc:example>

</apidoc:function>

<apidoc:function name="collection-create" lib="temporal" category="Temporal">
  <apidoc:summary>
	  This function constructs a named and protected temporal collection 
	  in the schema database with the specified system and optional valid axes.  
	  This function assumes that the axes already exist.  
	  The temporal collection is stored in the Security database.  
	  <p>A TEMPORAL-DUPCOLLECTION exception is thrown if the collection 
          already exists.  </p>  <p>
  For details on how to create a collection, see  
 <a href='#display.xqy?fname=http://pubs/6.0doc/xml/temporal/temporal-quick-start.xml%2366392'>Create a Temporal Collection</a> in the <em>Temporal Developer's Guide</em>
  </p>
  </apidoc:summary>
  <apidoc:params>
    <apidoc:param name="collection-name" type="xs:string">
    The name to be used to identify the temporal collection.
    </apidoc:param>
    <apidoc:param name="system-axis" type="xs:string">
    The name of the axis to be used by the collection as the system axis.
    </apidoc:param>
    <apidoc:param name="valid-axis" type="xs:string?" optional="true">
    The name of the axis to be used by the collection as the valid axis.
    This axis is only used by bi-temporal documents and is not specified
    for uni-temporal documents.
    </apidoc:param>
    <apidoc:param name="options" type="xs:string*" optional="true">
    Options to control access to the temporal collection:  
    <blockquote>
        <dl>
         <dt> <pre>updates-admin-override</pre>
        </dt>
	<dd>    
		Specifies that users with the admin role can change or delete 
		temporal documents using non-temporal functions, 
		such as <code>xdmp:document-insert</code> and 
		<code>xdmp:document-delete</code>.
        </dd>
         <dt> <pre>archive-default-dir=<em>dir</em></pre>
        </dt>
	<dd>
	When <code>archive-default-dir</code> is specified to be a non-empty value 
    and when you specify to protect a document with a relative archive path, 
    the archive file path is the concatenation of this value, / and the relative path.
        </dd>
         <dt> <pre>document-protect-<em>priv=priv_URI</em></pre>
        </dt>
	<dd>
	Specifies the privilege required to call the 
    <a class="xquery" href="#temporal:document-protect">temporal:document-protect</a>
    <a class="javascript" href="#temporal.documentProtect">temporal:documentProtect</a> 
    function. By default, 
    <a class="xquery" href="#temporal:document-protect">temporal:document-protect</a>
    <a class="javascript" href="#temporal.documentProtect">temporal:documentProtect</a> 
    requires the
    <code>http://marklogic.com/xdmp/privileges/temporal-document-protect</code> 
    privilege. An empty value means that no user except admin is allowed to call 
    <a class="xquery" href="#temporal:document-protect">temporal:document-protect</a>
    <a class="javascript" href="#temporal.documentProtect">temporal:documentProtect</a>.
        </dd>
         <dt> <pre>document-wipe-priv=<em>priv_URI</em></pre>
        </dt>
	<dd>
	Specifies the privilege required to call the 
    <a class="xquery" href="#temporal:document-wipe">temporal:document-wipe</a>
    <a class="javascript" href="#temporal.documentWipe">temporal:documentWipe</a> 
    function. By default, 
    <a class="xquery" href="#temporal:document-wipe">temporal:document-wipe</a>
    <a class="javascript" href="#temporal.documentWipe">temporal:documentWipe</a> 
    requires the
    <code>http://marklogic.com/xdmp/privileges/temporal-document-protect</code> 
    privilege. An empty value means that no user except admin is allowed to call 
    <a class="xquery" href="#temporal:document-wipe">temporal:document-wipe</a>
    <a class="javascript" href="#temporal.documentWipe">temporal:documentWipe</a>.
        </dd>
        <dt> <pre>override-priv=<em>priv_URI</em></pre>
        </dt>
        <dd>
        Specifies the privilege required to perform admin-override operations. 
        By default, only users with the admin role are allowed for these 
        operations and only when updates-admin-override option is specified.
        </dd>
        <dt> <pre>allow-nonempty</pre>
        </dt>
        <dd>
        When specified, no exception is thrown when documents tagged with 
        the collection URI exists.
        </dd>

        </dl> 
        </blockquote>    
    </apidoc:param>   
  </apidoc:params>
  <apidoc:return>xs:unsignedLong</apidoc:return>
<apidoc:example class="xquery"><pre xml:space="preserve"><![CDATA[
xquery version "1.0-ml"; 
 
import module namespace temporal = "http://marklogic.com/xdmp/temporal" 
      at "/MarkLogic/temporal.xqy";

temporal:collection-create("temporalCollection", "system", "valid")

   (: 
    Creates a temporal collection, named "temporalCollection", with the 
   "system" and "valid" axes. Use temporal:axis-create to create the 
   "system" and "valid" axes.  Returns the ID of the temporal collection.
   :)
]]></pre></apidoc:example>

<apidoc:example class="javascript"><pre xml:space="preserve"><![CDATA[
var temporal = require("/MarkLogic/temporal.xqy");

temporal.collectionCreate("temporalCollection", "system", "valid");

// Creates a temporal collection, named "temporalCollection", with the 
// "system" and "valid" axes. Use temporal.axisCreate to create the 
// "system" and "valid" axes.  Returns the ID of the temporal collection.
]]></pre></apidoc:example>

</apidoc:function>
<apidoc:function name="collection-remove" lib="temporal" category="Temporal">
  <apidoc:summary>
	  This function removes the named temporal collection from the 
	  Security database.
  </apidoc:summary>
  <apidoc:params>
    <apidoc:param name="collection-name" type="xs:string">
    The name of the collection to be removed.
    </apidoc:param>
  </apidoc:params>
  <apidoc:return>empty-sequence()</apidoc:return>
<apidoc:example class="xquery"><pre xml:space="preserve"><![CDATA[
xquery version "1.0-ml"; 
 
import module namespace temporal = "http://marklogic.com/xdmp/temporal" 
      at "/MarkLogic/temporal.xqy";

temporal:collection-remove("temporalCollection")

(: Removes the "temporalCollection" collection. :)     
]]></pre></apidoc:example>

<apidoc:example class="javascript"><pre xml:space="preserve"><![CDATA[
declareUpdate();
var temporal = require("/MarkLogic/temporal.xqy");

temporal.collectionRemove("temporalCollection");

// Removes the "temporalCollection" collection.     
]]></pre></apidoc:example>

</apidoc:function>

<apidoc:function name="collection-get-axis" lib="temporal" category="Temporal">
  <apidoc:summary>
	  This function returns the name of either the system or valid axis 
	  in the named temporal collection.
  <p>
	  A TEMPORAL-COLLECTIONNOTFOUND exception is thrown if the 
	  collection does not exist.  A TEMPORAL-INVALIDAXIS if axis is 
	  not "system" or "valid."
  </p>
  </apidoc:summary>
  <apidoc:params>
    <apidoc:param name="temporal-collection" type="xs:string">
    The name of the collection.
    </apidoc:param>
    <apidoc:param name="axis" type="xs:string">
	    The type of axis.  Value types are <code>system</code> and 
	    <code>valid</code>.
    </apidoc:param>
  </apidoc:params>
  <apidoc:return>xs:string*</apidoc:return>
<apidoc:example class="xquery"><pre xml:space="preserve"><![CDATA[
xquery version "1.0-ml"; 
 
import module namespace temporal = "http://marklogic.com/xdmp/temporal" 
      at "/MarkLogic/temporal.xqy";

temporal:collection-get-axis("temporalCollection", "valid") 

  (: 
  Returns the name of the valid axis for the "temporalCollection" 
  collection. 
  :) 
]]></pre></apidoc:example>

<apidoc:example class="javascript"><pre xml:space="preserve"><![CDATA[
var temporal = require("/MarkLogic/temporal.xqy");

temporal.collectionGetAxis("temporalCollection", "valid") ;

//  Returns the name of the valid axis for the "temporalCollection" 
//  collection. 
]]></pre></apidoc:example>
</apidoc:function>

<apidoc:function name="collections" lib="temporal" category="Temporal">
  <apidoc:summary>
	  This function returns all of the temporal collection names in 
	  the schema database.
  </apidoc:summary>
  <apidoc:return>xs:string*</apidoc:return>
<apidoc:example class="xquery"><pre xml:space="preserve"><![CDATA[
xquery version "1.0-ml"; 
 
import module namespace temporal = "http://marklogic.com/xdmp/temporal" 
      at "/MarkLogic/temporal.xqy";
 
temporal:collections()

(: Returns the names of all of the temporal collections. :)
]]></pre></apidoc:example>

<apidoc:example class="javascript"><pre xml:space="preserve"><![CDATA[
var temporal = require("/MarkLogic/temporal.xqy");
 
temporal.collections()

// Returns the names of all of the temporal collections. 
]]></pre></apidoc:example>

</apidoc:function>

<apidoc:function name="axis-get-start" lib="temporal" category="Temporal">
  <apidoc:summary>
  This function returns the range index used to define the start of the period
  by the named axis.
   <p>
  A TEMPORAL-AXISNOTFOUND  exception is thrown if the axis does not exist.
  </p>
  </apidoc:summary>
  <apidoc:params>
    <apidoc:param name="axis-name" type="xs:string">
    The name of the axis from which to return the range index.
    </apidoc:param>
  </apidoc:params>
  <apidoc:return>cts:reference</apidoc:return>
<apidoc:example class="xquery"><pre xml:space="preserve"><![CDATA[
xquery version "1.0-ml"; 
 
import module namespace temporal = "http://marklogic.com/xdmp/temporal" 
      at "/MarkLogic/temporal.xqy";
 
temporal:axis-get-start("system")

(: Returns the range index reference used for the start of the period of the 
   axis named, "system." :)
]]></pre></apidoc:example>

<apidoc:example class="javascript"><pre xml:space="preserve"><![CDATA[
var temporal = require("/MarkLogic/temporal.xqy");
 
temporal.axisGetStart("system");

// Returns the range index reference used for the start of the period of the 
// axis named, "system." 
]]></pre></apidoc:example>

</apidoc:function>

<apidoc:function name="axis-get-end" lib="temporal" category="Temporal">
  <apidoc:summary>
    This function returns the range index used to define the end of the period
    by the named axis.
   <p>
    A TEMPORAL-AXISNOTFOUND  exception is thrown if the axis does not exist.
  </p>    
  </apidoc:summary>
  <apidoc:params>
    <apidoc:param name="axis-name" type="xs:string">
    The name of the axis from which to return the range index.
    </apidoc:param>
  </apidoc:params>
  <apidoc:return>cts:reference</apidoc:return>
<apidoc:example class="xquery"><pre xml:space="preserve"><![CDATA[
xquery version "1.0-ml"; 
 
import module namespace temporal = "http://marklogic.com/xdmp/temporal" 
      at "/MarkLogic/temporal.xqy";
 
temporal:axis-get-end("system")

(: Returns the range index reference used for the end of the period of the 
   axis named, "system." :)
]]></pre></apidoc:example>

<apidoc:example class="javascript"><pre xml:space="preserve"><![CDATA[
var temporal = require("/MarkLogic/temporal.xqy");
 
temporal.axisGetEnd("system");

// Returns the range index reference used for the end of the period of the 
// axis named, "system." 
]]></pre></apidoc:example>

</apidoc:function>

<apidoc:function name="collection-get-options" lib="temporal" 
	category="Temporal">
  <apidoc:summary>
  This function returns the options set on the temporal collection.
  </apidoc:summary>
  <apidoc:params>
    <apidoc:param name="temporal-collection" type="xs:string">
    The name of the temporal collection.
    </apidoc:param>
  </apidoc:params>
  <apidoc:return>xs:string*</apidoc:return>
<apidoc:example class="xquery"><pre xml:space="preserve"><![CDATA[
xquery version "1.0-ml"; 
 
import module namespace temporal = "http://marklogic.com/xdmp/temporal" 
      at "/MarkLogic/temporal.xqy";

temporal:collection-get-options("kool") 
 
(: Returns the options set on the "kool" collection. :)
]]></pre></apidoc:example>

<apidoc:example class="javascript"><pre xml:space="preserve"><![CDATA[
var temporal = require("/MarkLogic/temporal.xqy");

temporal.collectionGetOptions("kool"); 
 
// Returns the options set on the "kool" collection. 
]]></pre></apidoc:example>

</apidoc:function>
<apidoc:function name="collection-set-options" lib="temporal" 
	category="Temporal">
  <apidoc:summary>
  This function sets the options on the temporal collection.
  </apidoc:summary>
  <apidoc:params>
    <apidoc:param name="temporal-collection" type="xs:string">
    The name of the temporal collection.
    </apidoc:param>
    <apidoc:param name="options" type="xs:string*">
    Options to control access to the temporal collection:  
    <blockquote>
        <dl>
         <dt> <pre>updates-admin-override</pre>
        </dt>
	<dd>    
		Specifies that users with the admin role can change or delete 
		temporal documents using non-temporal functions, such as 
		<code>xdmp:document-insert</code> and 
		<code>xdmp:document-delete</code>.
        </dd>
         <dt> <pre>archive-default-dir=<em>dir</em></pre>
        </dt>
	<dd>
	When <code>archive-default-dir</code> is specified to be a non-empty value 
    and when you specify to protect a document with a relative archive path, 
    the archive file path is the concatenation of this value, / and the relative path.
        </dd>
         <dt> <pre>document-protect-<em>priv=priv_URI</em></pre>
        </dt>
	<dd>
	Specifies the privilege required to call the 
    <a class="xquery" href="#temporal:document-protect">temporal:document-protect</a>
    <a class="javascript" href="#temporal.documentProtect">temporal:documentProtect</a> 
    function. By default, 
    <a class="xquery" href="#temporal:document-protect">temporal:document-protect</a>
    <a class="javascript" href="#temporal.documentProtect">temporal:documentProtect</a> 
    requires the
    <code>http://marklogic.com/xdmp/privileges/temporal-document-protect</code> 
    privilege. An empty value means that no user except admin is allowed to call 
    <a class="xquery" href="#temporal:document-protect">temporal:document-protect</a>
    <a class="javascript" href="#temporal.documentProtect">temporal:documentProtect</a>.
        </dd>
         <dt> <pre>document-wipe-priv=<em>priv_URI</em></pre>
        </dt>
	<dd>
	Specifies the privilege required to call the 
    <a class="xquery" href="#temporal:document-wipe">temporal:document-wipe</a>
    <a class="javascript" href="#temporal.documentWipe">temporal:documentWipe</a> 
    function. By default, 
    <a class="xquery" href="#temporal:document-wipe">temporal:document-wipe</a>
    <a class="javascript" href="#temporal.documentWipe">temporal:documentWipe</a> 
    requires the
    <code>http://marklogic.com/xdmp/privileges/temporal-document-protect</code> 
    privilege. An empty value means that no user except admin is allowed to call 
    <a class="xquery" href="#temporal:document-wipe">temporal:document-wipe</a>
    <a class="javascript" href="#temporal.documentWipe">temporal:documentWipe</a> 
    <a class="javascript" href="#temporal.documentWipe">temporal:documentWipe</a>.
        </dd>
        <dt> <pre>override-priv=<em>priv_URI</em></pre>
        </dt>
        <dd>
        Specifies the privilege required to perform admin-override operations.
        By default, only users with the admin role are allowed for these
        operations and only when updates-admin-override option is specified.
        </dd>

        </dl> 
        </blockquote> 
    </apidoc:param>
  </apidoc:params>
  <apidoc:return>empty-sequence()</apidoc:return>
<apidoc:example class="xquery"><pre xml:space="preserve"><![CDATA[
xquery version "1.0-ml"; 
 
import module namespace temporal = "http://marklogic.com/xdmp/temporal" 
      at "/MarkLogic/temporal.xqy";

temporal:collection-set-options("kool", ("updates-admin-override")) 
 
(: Sets the "updates-admin-override" option on the "kool" collection. :)
]]></pre></apidoc:example>

<apidoc:example class="javascript"><pre xml:space="preserve"><![CDATA[
var temporal = require("/MarkLogic/temporal.xqy");

temporal.collectionSetOptions("kool", ["updates-admin-override"]) ;
 
// Sets the "updates-admin-override" option on the "kool" collection. 
]]></pre></apidoc:example>

</apidoc:function>

</apidoc:module>

