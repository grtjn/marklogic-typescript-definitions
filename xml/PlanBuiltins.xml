<apidoc:module name="Extensions" category="Extension" lib="plan" xmlns:apidoc="http://marklogic.com/xdmp/apidoc"><apidoc:function name="sparql-plan" type="builtin" lib="sem" category="Semantics" subcategory="Semantic Functions" hidden="false">
    <apidoc:summary>
  Return a node representing the query plan of the given SPARQL query.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="sparql" type="xs:string">
    The SPARQL query to be executed.
  </apidoc:param>
      <apidoc:param name="bindingNames" type="xs:string*" optional="true">
    A sequence of strings naming the variables whose values should be provided
    by the sem:sparql() call. These values will be substituted into the query
    where referenced as if they were literals.
  </apidoc:param>
      <apidoc:param name="options" type="xs:string*" optional="true">
    Options as a sequence of string values. Available options are:
    <dl xmlns="http://www.w3.org/1999/xhtml">
    <dt>"base=<em>IRI</em>"</dt>
    <dd>The initial base IRI for the query.</dd>
    <dt>"optimize=N"</dt>
    <dd>Sets the optimization level to use. Levels of 0 (off), 1, and 2 are
    recognized. The default is 1.</dd>
    </dl>
  </apidoc:param>
    </apidoc:params>
    <apidoc:return class="xquery">element()</apidoc:return>
    <apidoc:return class="javascript">ObjectNode</apidoc:return>
    <apidoc:privilege>
<p xmlns="http://www.w3.org/1999/xhtml"><code>http://marklogic.com/xdmp/privileges/sem-sparql</code></p>
</apidoc:privilege>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">

    sem:sparql-plan("select * { ?s ?p ?o }",(),"optimize=1")

</pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">

    sem.sparqlPlan("select * { ?s ?p ?o }",null,"optimize=1")

</pre></apidoc:example>
  </apidoc:function><apidoc:function name="sql-plan" type="builtin" lib="xdmp" category="Extension" hidden="false">
    <apidoc:summary>
  Returns a node representing the query plan of the given SQL SELECT query.
  Raises an error if the SQL query is not a SELECT query.
</apidoc:summary>
    <apidoc:params>
      <apidoc:param name="sql" type="xs:string">
    The SQL query to be executed.
  </apidoc:param>
      <apidoc:param name="options" type="xs:string*" optional="true">
    Options as a sequence of string values. Available options are:
    <dl xmlns="http://www.w3.org/1999/xhtml">
    <dt>"optimize=N"</dt>
    <dd>Sets the optimization level to use. Levels of 0 (off), 1, and 2 are
    recognized. The default is 1.</dd>
    </dl>
  </apidoc:param>
    </apidoc:params>
    <apidoc:return class="xquery">element()</apidoc:return>
    <apidoc:return class="javascript">ObjectNode</apidoc:return>
    <apidoc:privilege>
<p xmlns="http://www.w3.org/1999/xhtml"><code>http://marklogic.com/xdmp/privileges/xdmp-sql</code></p>
</apidoc:privilege>
    <apidoc:example class="xquery"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp:sql-plan("select  customername, customersince
from customers
where year(customersince)  &gt;  2000
and year(customersince)  &lt;  2013")
</pre></apidoc:example>
    <apidoc:example class="javascript"><pre xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">
xdmp.sqlPlan("select  customername, customersince\n\
from customers\n\
where year(customersince)  &gt;  2000\n\
and year(customersince)  &lt;  2013")
</pre></apidoc:example>
  </apidoc:function></apidoc:module>